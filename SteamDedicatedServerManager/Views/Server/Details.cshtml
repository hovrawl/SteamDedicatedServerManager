@model ServerDetailsViewModel

@{
    var server = Model.ServerInstance;
    var titleFragment = $"{server?.Name} ";
    var serverId = server?.Id.ToString() ?? "";
    ViewBag.Title = $"Steam Dedicated Server Manager - {titleFragment}Server Details";
}

<div class="h-server-details-container">
    <div class="h-server-details">
        <span>@server?.Name</span>
        <span>@server?.GameType.ToString("G")</span>
        <span>@server?.ServerStatus.ToString("G")</span>
    </div>

    <div class="h-server-btns">
        <button class="h-start-server-btn" type="button" data-id="@serverId">Start Server</button>
        <button class="h-stop-server-btn" type="button" data-id="@serverId">Stop Server</button>
        <button class="h-connect-console-btn" type="button" data-id="@serverId">Connect Console</button>
    </div>
    <div class="h-server-console-container">
        <span class="h-server-messages"></span>
    </div>
</div>

<script type="text/javascript">
    let consoleSse = null;
    function connectConsole (e){
        let target = $(e.target);
        let serverId = target.attr('data-id');    
        let formData = new FormData(); 
        formData.append('serverIdString', serverId);
        
        fetch('@Url.Action("ConnectConsole")', {
                    method: 'POST',
                    body: formData,
        }).then((response) => {
            console.log(response)                    
            let source = new EventSource('/console-sse');
            source.onopen = function (){
                console.log('Server Console Connected');
            }
            source.onerror = function (event){
                source.close();
            }
            source.onmessage = function (event){
                if (event.data){
                    //console.log(event.data); 
                    serverConsole.addEntry(event.data);
                }
            }  
            consoleSse = source;
        })
        
    }

    function startServer(e) {
        let target = $(e.target);
        let serverId = target.attr('data-id');    
        let formData = new FormData(); 
        formData.append('serverIdString', serverId);
        fetch('@Url.Action("StartServer")', {
                method: 'POST',
                body: formData,
        }).then((response) => {
            console.log(response)
            
            let connectServerBtn = $('.h-connect-console-btn');
            connectConsole({ target : connectServerBtn});
        })
    }
    
    function stopServer(e) {
        let target = $(e.target);
        let serverId = target.attr('data-id');        
        let formData = new FormData(); 
        
        formData.append('serverIdString', serverId);
        fetch('@Url.Action("StopServer")', {
                method: 'POST',
                body: formData,               
        }).then((response) => {
            console.log(response)
            
            if (consoleSse && consoleSse.close) {
                consoleSse.close()
            }
        })
    }
    let serverConsole = null;
    $(document).ready(function() {
        // on start function
        let connectServerBtn = $('.h-connect-console-btn');
        connectServerBtn.on('click', connectConsole);
    
        let startServerBtn = $('.h-start-server-btn');
        startServerBtn.on('click', startServer);
        
        let stopServerBtn = $('.h-stop-server-btn');
        stopServerBtn.on('click', stopServer);
        
        let consoleOptions = {
            
        };
        
        let consoleElement = $('.h-server-console-container');
        consoleOptions.element = consoleElement;
        
        let newConsole = new ServerConsole(consoleOptions);
        
        serverConsole = newConsole;
        
    });
</script>