@model ServerDetailsViewModel

@{
    var server = Model.ServerInstance;
    var titleFragment = $"{server?.Name} ";
    var serverId = server?.Id.ToString() ?? "";
    ViewBag.Title = $"Steam Dedicated Server Manager - {titleFragment}Server Details";
}

<div class="d-flex flex-column flex-grow-1 h-server-details-container">
    <div class="h-server-btns">
        <button class="h-start-server-btn btn btn-primary" type="button" data-id="@serverId">Start Server</button>
        <button class="h-stop-server-btn  btn btn-primary" type="button" data-id="@serverId">Stop Server</button>
    </div>
    
    <div class="h-server-details d-flex flex-column">
        <h5>@server?.Name</h5>
        <p>@server?.GameType.ToString("G")</p>
        <p>@server?.ServerStatus.ToString("G")</p>
    </div>

    @* <div class="h-server-navigation container"> *@
    @*     <div class="h-collapse-btns"> *@
    @*         <button class="btn btn-primary" type="button" data-view="console"> *@
    @*             Console *@
    @*         </button> *@
    @*         <button class="btn btn-primary" type="button" data-view="settings"> *@
    @*             Config *@
    @*         </button> *@
    @*     </div> *@
    @* </div> *@
    <ul class="nav nav-pills" role="tablist" id="server-navigation">
        <li class="nav-item">
        <button class="nav-link active" id="console-tab" data-bs-toggle="tab" data-bs-target="#console" type="button" role="tab" aria-controls="console" aria-selected="true">Console</button>
        </li>
        <li class="nav-item">
        <button class="nav-link" id="settings-tab" data-bs-toggle="tab" data-bs-target="#settings" type="button" role="tab" aria-controls="settings" aria-selected="false">Config</button>
        </li>
    </ul>
    <div class="tab-content" id="server-navigation-content">
        <div id="console" class="tab-pane fade show active">
            @await Html.PartialAsync("_Console", Model)
        </div>
        <div id="settings" class="tab-pane fade">
            @await Html.PartialAsync("_Settings", Model)
        </div>
      
    </div>
   
    <div class="container d-flex flex-column flex-grow-1 overflow-auto" id="server-details-partial-container">
    </div>
</div>

<script type="text/javascript">
    let consoleSse = null;
    function connectConsole (e){
        let target = $(e.target);
        let serverId = target.attr('data-id');    
        let formData = new FormData(); 
        formData.append('serverIdString', serverId);
        
        fetch('@Url.Action("ConnectConsole")', {
                    method: 'POST',
                    body: formData,
        }).then((response) => {
            console.log(response)                    
            let source = new EventSource('/console-sse');
            source.onopen = function (){
                console.log('Server Console Connected');
            }
            source.onerror = function (event){
                source.close();
            }
            source.onmessage = function (event){
                if (event.data){
                    //console.log(event.data); 
                    serverConsole.addEntry(event.data);
                }
            }  
            consoleSse = source;
        })
        
    }

    function startServer(e) {
        let target = $(e.target);
        let serverId = target.attr('data-id');    
        let formData = new FormData(); 
        formData.append('serverIdString', serverId);
        fetch('@Url.Action("StartServer")', {
                method: 'POST',
                body: formData,
        }).then((response) => {
            console.log(response)
            
            let connectServerBtn = $('.h-connect-console-btn');
            connectConsole({ target : connectServerBtn});
        })
    }
    
    function stopServer(e) {
        let target = $(e.target);
        let serverId = target.attr('data-id');        
        let formData = new FormData(); 
        
        formData.append('serverIdString', serverId);
        fetch('@Url.Action("StopServer")', {
                method: 'POST',
                body: formData,               
        }).then((response) => {
            console.log(response)
            
            if (consoleSse && consoleSse.close) {
                consoleSse.close()
            }
        })
    }
    
    function bindPartialNavigation(){
        let serverId = '@serverId';
        let serverNavigation = $('.h-server-navigation');
        let navigationBtns = serverNavigation.find('.btn');
        navigationBtns.on('click', function(e){
            let element = $(e.currentTarget);
            let viewName = element.attr('data-view');
            let partialUrl = '@Url.Action("Settings")';
            switch (viewName){
                case 'settings':{
                    partialUrl = '@Url.Action("Settings")';
                    break;    
                }
                case 'console':{
                    partialUrl = '@Url.Action("Console")';
                    break;    
                }
            }
            let formData = new FormData(); 
            formData.append('serverIdString', serverId);
            fetch(partialUrl, {
                method: 'POST',
                body: formData
            })
                .then((response) => { return response.text(); })
                .then((result) => {
                    $('#server-details-partial-container').html(result);
                });
        });
        
        
      
        
    }
    let serverConsole = null;
    $(document).ready(function() {
        // on start function
        let connectServerBtn = $('.h-connect-console-btn');
        connectServerBtn.on('click', connectConsole);
    
        let startServerBtn = $('.h-start-server-btn');
        startServerBtn.on('click', startServer);
        
        let stopServerBtn = $('.h-stop-server-btn');
        stopServerBtn.on('click', stopServer);
        
        let consoleOptions = {
            
        };
        
        let consoleElement = $('.h-server-console-container');
        consoleOptions.element = consoleElement;
        
        let newConsole = new ServerConsole(consoleOptions);
        
        serverConsole = newConsole;
        
        bindPartialNavigation();
        
    });
</script>